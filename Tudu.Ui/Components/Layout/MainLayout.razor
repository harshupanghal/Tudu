@inherits LayoutComponentBase
@attribute [Authorize]

@using System.Security.Claims
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation


<div class="page">
    <SideBar/>
    <main>
        <div class="top-row px-4">
            <h1 class="logo">TuDu</h1>
            <AuthorizeView>
                <Authorized>
                    <div class="d-flex align-items-center gap-2">
                        @if (!string.IsNullOrWhiteSpace(profilePicture))
                            {
                            <img src="@profilePicture" class="pfp-img rounded-circle" alt="Profile" />
                            }
                        else
                            {
                            <div class="pfp-initial rounded-circle">@userInitial</div>
                            }

                        <span class="fw-semibold username">@userName</span>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <NavLink class="btn btn-outline-light px-3" href="/auth/login">Sign In</NavLink>
                </NotAuthorized>
            </AuthorizeView>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

                    @code {
     private string? userName;
    private string? profilePicture;
    private string userInitial = "U";

     protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        userName = user.FindFirst(ClaimTypes.Name)?.Value;
        profilePicture = user.FindFirst("ProfilePicture")?.Value;

        if (!string.IsNullOrWhiteSpace(userName))
            userInitial = userName[0].ToString().ToUpper();
    }
}